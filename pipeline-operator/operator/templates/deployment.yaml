apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Name }}-connect
  namespace: {{ .Namespace }}
  labels:
    app: kafka-connect
spec:
  replicas: {{ .Params.REPLICA_COUNT }}
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
        - name: kafka-connect
          image: mesosphere/kafka:2.6.0-1.3.2
          imagePullPolicy: Always
          resources:
            requests:
              cpu: {{ .Params.CPUS }}
              memory: {{ .Params.MEM }}
            limits:
              cpu: {{ .Params.CPUS_LIMIT }}
              memory: {{ .Params.MEM_LIMIT }}
          ports:
            - containerPort: {{ .Params.REST_PORT }}
              name: server
          command:
            - bash
            - -c
            - -x
          args:
              exec ${KAFKA_HOME}/bin/connect-distributed.sh ${KAFKA_HOME}/connect-distributed.properties;
          volumeMounts:
            - name: kafka-connect-config
              mountPath: /kafka-connect-config
            {{ if .Params.CUSTOM_CM }}
            - name: custom-configuration
              mountPath: /custom-configuration
            {{ end }}
            {{ if .Params.CONNECTORS_CM }}
            - name: connectors-configuration
              mountPath: /connectors-configuration
            {{ end }}
          readinessProbe:
            tcpSocket:
              port: {{ .Params.REST_PORT }}
            initialDelaySeconds: {{ .Params.READINESS_INITIAL_DELAY_SECONDS }}
            periodSeconds: {{ .Params.READINESS_PERIOD_SECONDS }}
            timeoutSeconds: {{ .Params.READINESS_TIMEOUT_SECONDS }}
            successThreshold: {{ .Params.READINESS_SUCCESS_THRESHOLD }}
            failureThreshold: {{ .Params.READINESS_FAILURE_THRESHOLD }}
      initContainers:
        - name: bootstrap
          image: zmalikshxil/pipelines-bootstrap:0.0.1
          command: ['sh', '-c', "/etc/pipeline/bootstrap"]
          env:
            - name: SINK_TYPE
              value: {{ .Params.SINK_TYPE }}
            - name: SOURCE_TYPE
              value: {{ .Params.SOURCE_TYPE }}
          volumeMounts:
            - name: cassandra
              mountPath: /cassandra-config
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: cassandra
          configMap:
            name: cassandra-{{ .Name }}
        - name: mysql
          configMap:
            name: cassandra-{{ .Name }}
        - name: zookeeper-data
          persistentVolumeClaim:
            claimName: {{ .Name }}-pvc
  strategy:
    type: Recreate
